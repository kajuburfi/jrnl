var searchIndex = new Map(JSON.parse('[["jrnl",{"t":"FONNNNNNONNNNCOHNNHOOOOOOOONNNNNCOHHHHHHHHHHFOHOOONNONONNNHHHHHHNOHOHHNNNNO","n":["Cli","approx","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","entry","fmt","from","from_arg_matches","from_arg_matches_mut","funcs","gen_report","get_default_path","group_id","into","main","month","open","open_config","open_entry","path","print_config","search","tag","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","year","check_file_existed","correct_month_nums","default_conf","inquire_date","make_food_table","make_pager","make_tags_table","month_no_to_name","print_calendar","read_config","Config","add_food_column","add_info_to_file","add_timestamp","add_weekday","approx_variation","borrow","borrow_mut","default_path","deserialize","editor","fmt","","from","gen_report","gen_report_year","get_entry","get_headings","get_tags_from_file","handle_tags","into","max_rows","open_editor","pager","parse_entry_args","search_for_stuff","to_string","try_from","try_into","type_id","when_pager"],"q":[[0,"jrnl"],[34,"jrnl::funcs"],[44,"jrnl::utils"],[75,"core::option"],[76,"clap_builder::builder::command"],[77,"core::fmt"],[78,"clap_builder::parser::matches::arg_matches"],[79,"clap_builder"],[80,"core::result"],[81,"alloc::string"],[82,"clap_builder::util::id"],[83,"core::any"],[84,"chrono::naive::date"],[85,"alloc::vec"],[86,"comfy_table::table"],[87,"std::io::error"],[88,"serde::de"]],"i":"`b00000000000`0`00`0000000000000`0```````````Bd`00000000000``````00`0``00000","f":"`{bd}{ff}0{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{}f}04{{{h{b}}{h{jl}}}n}{cc{}}{{{h{A`}}}{{Ad{bAb}}}}{{{h{jA`}}}{{Ad{bAb}}}}`{bAf}{{}Ah}{{}{{d{Aj}}}}{{}c{}}{{}Al}==4==4=={c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hAn}{{{h{jb}}{h{A`}}}{{Ad{AlAb}}}}{{{h{jb}}{h{jA`}}}{{Ad{AlAb}}}}`{bd}{{{h{B`}}}Af}{BbAh}{{}Bd}{{}Bf}{{{Bj{{Bh{Ah}}{Bh{{Bh{Ah}}}}}}}Bl}{{{h{B`}}}Al}{{{Bj{{Bh{Ah}}{Bh{Ah}}}}}Bl}5{{BnBb{Bh{Bb}}}Ah}{{}{{Bj{BdAh}}}}`{BdAf}{{{h{B`}}Ah}{{C`{Al}}}}11{BdBb}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{BdAh}{c{{Ad{Bd}}}Cb}1{{{h{Bd}}{h{jl}}}n}0{cc{}}{{BnBb}Al}{BnAl}{BfAh}{{{h{B`}}}{{Bj{{Bh{Ah}}{Bh{Bb}}}}}}{{{h{B`}}}{{Bh{Ah}}}}{{{h{B`}}BnBbAfAfAfBb}Al}{{}c{}}={AhAl};{{{h{B`}}}Bf}{{{h{B`}}BfAfBb}{{Bj{{Bh{Ah}}{Bh{Ah}}}}}}{hAh}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hAn}{BdAh}","D":"Ff","p":[[5,"Cli",0],[6,"Option",75,null,1],[5,"Command",76],[1,"reference",null,null,1],[0,"mut"],[5,"Formatter",77],[8,"Result",77],[5,"ArgMatches",78],[8,"Error",79],[6,"Result",80,null,1],[1,"bool"],[5,"String",81],[5,"Id",82],[1,"unit"],[5,"TypeId",83],[1,"str"],[1,"u32"],[5,"Config",44],[5,"NaiveDate",84],[5,"Vec",85],[1,"tuple",null,null,1],[5,"Table",86],[1,"i32"],[8,"Result",87],[10,"Deserializer",88]],"r":[],"b":[[55,"impl-Display-for-Config"],[56,"impl-Debug-for-Config"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgACgADAAUACgAAAAwAAQARAAAAEwAAABwABAAzAAEANgAAADgAAQBHAAMA","P":[[4,"T"],[6,""],[10,"T"],[11,""],[17,"U"],[18,""],[27,"U,T"],[28,"U"],[29,""],[50,"T"],[52,""],[53,"__D"],[54,""],[57,"T"],[58,""],[64,"U"],[65,""],[71,"U,T"],[72,"U"],[73,""]]}],["jrnl",{"t":"FONNNNNNONNNNOHNNHOOOOOONNNNNCOFOHOONNONONNCHHHHHHNOHOHHNNNOHHHHHHHHHH","n":["Cli","approx","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","entry","fmt","from","from_arg_matches","from_arg_matches_mut","gen_report","get_default_path","group_id","into","main","month","open_config","open_entry","path","search","tag","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","year","Config","add_food_column","add_info_to_file","add_timestamp","add_weekday","borrow","borrow_mut","default_path","deserialize","editor","fmt","from","funcs","gen_report","gen_report_year","get_entry","get_headings","get_tags_from_file","handle_tags","into","max_rows","open_editor","pager","parse_entry_args","search_for_stuff","try_from","try_into","type_id","when_pager","check_file_existed","correct_month_nums","default_conf","inquire_date","make_food_table","make_pager","make_tags_table","month_no_to_name","print_calendar","read_config"],"q":[[0,"jrnl"],[31,"jrnl::utils"],[60,"jrnl::utils::funcs"],[70,"clap_builder::builder::command"],[71,"core::option"],[72,"core::fmt"],[73,"clap_builder::parser::matches::arg_matches"],[74,"clap_builder"],[75,"core::result"],[76,"alloc::string"],[77,"clap_builder::util::id"],[78,"core::any"],[79,"std::io::error"],[80,"serde::de"],[81,"chrono::naive::date"],[82,"alloc::vec"],[83,"comfy_table::table"]],"i":"`b000000000000`00`00000000000`0`B``000000000```````00`0``0000``````````","f":"`{bd}{ff}0{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{}f}0{bl}{{{h{b}}{h{jn}}}A`}{cc{}}{{{h{Ab}}}{{Af{bAd}}}}{{{h{jAb}}}{{Af{bAd}}}}9{{}Ah}{{}{{l{Aj}}}}{{}c{}}{{}Al}8=8888{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{hAn}{{{h{jb}}{h{Ab}}}{{Af{AlAd}}}}{{{h{jb}}{h{jAb}}}{{Af{AlAd}}}}`=`{B`d}{{{h{Bb}}Ah}{{Bd{Al}}}}11{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{B`Ah}{c{{Af{B`}}}Bf}1{{{h{B`}}{h{jn}}}A`}{cc{}}`{{BhBj}Al}{BhAl}{BlAh}{{{h{Bb}}}{{C`{{Bn{Ah}}{Bn{Bj}}}}}}{{{h{Bb}}}{{Bn{Ah}}}}{{{h{Bb}}BhBjdddd}Al}{{}c{}}{B`Bj}{AhAl}<{{{h{Bb}}}Bl}{{{h{Bb}}Bldd}{{C`{{Bn{Ah}}{Bn{Ah}}}}}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{hAn}{B`Ah}{{{h{Bb}}}d}{BjAh}{{}B`}{{}Bl}{{{C`{{Bn{Ah}}{Bn{{Bn{Ah}}}}}}}Cb}{{{h{Bb}}}Al}{{{C`{{Bn{Ah}}{Bn{Ah}}}}}Cb}5{{BhBj{Bn{Bj}}}Ah}{{}{{C`{B`Ah}}}}","D":"Df","p":[[5,"Cli",0],[1,"bool"],[5,"Command",70],[1,"reference",null,null,1],[0,"mut"],[6,"Option",71,null,1],[5,"Formatter",72],[8,"Result",72],[5,"ArgMatches",73],[8,"Error",74],[6,"Result",75,null,1],[5,"String",76],[5,"Id",77],[1,"unit"],[5,"TypeId",78],[5,"Config",31],[1,"str"],[8,"Result",79],[10,"Deserializer",80],[1,"i32"],[1,"u32"],[5,"NaiveDate",81],[5,"Vec",82],[1,"tuple",null,null,1],[5,"Table",83]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACMADgAAAAAAAwAFAAoAAAAMAAEAEAAAABIAAAAZAAUAIQAAACMABwAsAAAANAAAADYAAAA5AAMARQABAA==","P":[[4,"T"],[6,""],[10,"T"],[11,""],[16,"U"],[17,""],[24,"U,T"],[25,"U"],[26,""],[36,"T"],[38,""],[39,"__D"],[40,""],[42,"T"],[44,""],[50,"U"],[51,""],[56,"U,T"],[57,"U"],[58,""]]}],["jrnl",{"t":"FONNNNNNONNNNOHNNHOOOOOONNNNNCOFOHOONNONONNCHHHHHHNOHOHHNNNOHHHHHHHHHH","n":["Cli","approx","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","entry","fmt","from","from_arg_matches","from_arg_matches_mut","gen_report","get_default_path","group_id","into","main","month","open_config","open_entry","path","search","tag","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","year","Config","add_food_column","add_info_to_file","add_timestamp","add_weekday","borrow","borrow_mut","default_path","deserialize","editor","fmt","from","funcs","gen_report","gen_report_year","get_entry","get_headings","get_tags_from_file","handle_tags","into","max_rows","open_editor","pager","parse_entry_args","search_for_stuff","try_from","try_into","type_id","when_pager","check_file_existed","correct_month_nums","default_conf","inquire_date","make_food_table","make_pager","make_tags_table","month_no_to_name","print_calendar","read_config"],"q":[[0,"jrnl"],[31,"jrnl::utils"],[60,"jrnl::utils::funcs"],[70,"clap_builder::builder::command"],[71,"core::option"],[72,"core::fmt"],[73,"clap_builder::parser::matches::arg_matches"],[74,"clap_builder"],[75,"core::result"],[76,"alloc::string"],[77,"clap_builder::util::id"],[78,"core::any"],[79,"std::io::error"],[80,"serde::de"],[81,"chrono::naive::date"],[82,"alloc::vec"],[83,"comfy_table::table"]],"i":"`b000000000000`00`00000000000`0`B``000000000```````00`0``0000``````````","f":"`{bd}{ff}0{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{}f}0{bl}{{{h{b}}{h{jn}}}A`}{cc{}}{{{h{Ab}}}{{Af{bAd}}}}{{{h{jAb}}}{{Af{bAd}}}}9{{}Ah}{{}{{l{Aj}}}}{{}c{}}{{}Al}8=8888{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{hAn}{{{h{jb}}{h{Ab}}}{{Af{AlAd}}}}{{{h{jb}}{h{jAb}}}{{Af{AlAd}}}}`=`{B`d}{{{h{Bb}}Ah}{{Bd{Al}}}}11{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{B`Ah}{c{{Af{B`}}}Bf}1{{{h{B`}}{h{jn}}}A`}{cc{}}`{{BhBj}Al}{BhAl}{BlAh}{{{h{Bb}}}{{C`{{Bn{Ah}}{Bn{Bj}}}}}}{{{h{Bb}}}{{Bn{Ah}}}}{{{h{Bb}}BhBjdddd}Al}{{}c{}}{B`Bj}{AhAl}<{{{h{Bb}}}Bl}{{{h{Bb}}Bldd}{{C`{{Bn{Ah}}{Bn{Ah}}}}}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{hAn}{B`Ah}{{{h{Bb}}}d}{BjAh}{{}B`}{{}Bl}{{{C`{{Bn{Ah}}{Bn{{Bn{Ah}}}}}}}Cb}{{{h{Bb}}}Al}{{{C`{{Bn{Ah}}{Bn{Ah}}}}}Cb}5{{BhBj{Bn{Bj}}}Ah}{{}{{C`{B`Ah}}}}","D":"Dj","p":[[5,"Cli",0],[1,"bool"],[5,"Command",70],[1,"reference",null,null,1],[0,"mut"],[6,"Option",71,null,1],[5,"Formatter",72],[8,"Result",72],[5,"ArgMatches",73],[8,"Error",74],[6,"Result",75,null,1],[5,"String",76],[5,"Id",77],[1,"unit"],[5,"TypeId",78],[5,"Config",31],[1,"str"],[8,"Result",79],[10,"Deserializer",80],[1,"i32"],[1,"u32"],[5,"NaiveDate",81],[5,"Vec",82],[1,"tuple",null,null,1],[5,"Table",83]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACEADQAAAAAAAwAFAAoAAAAMAAEAEAAAABIAAAAZAAUAIQAAACMABwAsAAAANAAAADYAAAA5AAMA","P":[[4,"T"],[6,""],[10,"T"],[11,""],[16,"U"],[17,""],[24,"U,T"],[25,"U"],[26,""],[36,"T"],[38,""],[39,"__D"],[40,""],[42,"T"],[44,""],[50,"U"],[51,""],[56,"U,T"],[57,"U"],[58,""]]}],["jrnl",{"t":"FONNNNNNONNNNOHNNHOOOOOONNNNNCOFOHOOONNONONNCHHHHHHNOHOHHNNNOHHHHHHHHHH","n":["Cli","approx","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","entry","fmt","from","from_arg_matches","from_arg_matches_mut","gen_report","get_default_path","group_id","into","main","month","open_config","open_entry","path","search","tag","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utils","year","Config","add_food_column","add_info_to_file","add_timestamp","add_weekday","approx_variation","borrow","borrow_mut","default_path","deserialize","editor","fmt","from","funcs","gen_report","gen_report_year","get_entry","get_headings","get_tags_from_file","handle_tags","into","max_rows","open_editor","pager","parse_entry_args","search_for_stuff","try_from","try_into","type_id","when_pager","check_file_existed","correct_month_nums","default_conf","inquire_date","make_food_table","make_pager","make_tags_table","month_no_to_name","print_calendar","read_config"],"q":[[0,"jrnl"],[31,"jrnl::utils"],[61,"jrnl::utils::funcs"],[71,"core::option"],[72,"clap_builder::builder::command"],[73,"core::fmt"],[74,"clap_builder::parser::matches::arg_matches"],[75,"clap_builder"],[76,"core::result"],[77,"alloc::string"],[78,"clap_builder::util::id"],[79,"core::any"],[80,"std::io::error"],[81,"serde::de"],[82,"chrono::naive::date"],[83,"alloc::vec"],[84,"comfy_table::table"]],"i":"`b000000000000`00`00000000000`0`B``0000000000```````00`0``0000``````````","f":"`{bd}{ff}0{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{}f}04{{{h{b}}{h{jl}}}n}{cc{}}{{{h{A`}}}{{Ad{bAb}}}}{{{h{jA`}}}{{Ad{bAb}}}}{bAf}{{}Ah}{{}{{d{Aj}}}}{{}c{}}{{}Al}=4===={c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hAn}{{{h{jb}}{h{A`}}}{{Ad{AlAb}}}}{{{h{jb}}{h{jA`}}}{{Ad{AlAb}}}}`{bd}`{B`Af}{{{h{Bb}}Ah}{{Bd{Al}}}}11{B`Bf}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{B`Ah}{c{{Ad{B`}}}Bh}1{{{h{B`}}{h{jl}}}n}{cc{}}`{{BjBf}Al}{BjAl}{BlAh}{{{h{Bb}}}{{C`{{Bn{Ah}}{Bn{Bf}}}}}}{{{h{Bb}}}{{Bn{Ah}}}}{{{h{Bb}}BjBfAfAfAfBf}Al}{{}c{}}={AhAl};{{{h{Bb}}}Bl}{{{h{Bb}}BlAfBf}{{C`{{Bn{Ah}}{Bn{Ah}}}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hAn}{B`Ah}{{{h{Bb}}}Af}{BfAh}{{}B`}{{}Bl}{{{C`{{Bn{Ah}}{Bn{{Bn{Ah}}}}}}}Cb}{{{h{Bb}}}Al}{{{C`{{Bn{Ah}}{Bn{Ah}}}}}Cb}5{{BjBf{Bn{Bf}}}Ah}{{}{{C`{B`Ah}}}}","D":"Fb","p":[[5,"Cli",0],[6,"Option",71,null,1],[5,"Command",72],[1,"reference",null,null,1],[0,"mut"],[5,"Formatter",73],[8,"Result",73],[5,"ArgMatches",74],[8,"Error",75],[6,"Result",76,null,1],[1,"bool"],[5,"String",77],[5,"Id",78],[1,"unit"],[5,"TypeId",79],[5,"Config",31],[1,"str"],[8,"Result",80],[1,"u32"],[10,"Deserializer",81],[1,"i32"],[5,"NaiveDate",82],[5,"Vec",83],[1,"tuple",null,null,1],[5,"Table",84]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABYACgADAAUACgAAAAwAAQAQAAAAEgAAABkABAAmAAEAKQAAACsAAAA6AAIA","P":[[4,"T"],[6,""],[10,"T"],[11,""],[16,"U"],[17,""],[24,"U,T"],[25,"U"],[26,""],[37,"T"],[39,""],[40,"__D"],[41,""],[43,"T"],[45,""],[51,"U"],[52,""],[57,"U,T"],[58,"U"],[59,""]]}],["utf8parse",{"t":"FKNNNNNMNNNNNMNNNN","n":["Parser","Receiver","advance","borrow","borrow_mut","clone","clone_to_uninit","codepoint","default","eq","fmt","from","into","invalid_sequence","new","try_from","try_into","type_id"],"q":[[0,"utf8parse"],[18,"core::fmt"],[19,"core::result"],[20,"core::any"]],"i":"``d0000l1111101111","f":"``{{{f{bd}}{f{bc}}h}jl}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{d}}}d}{{fh}j}{{{f{bl}}n}j}{{}d}{{{f{d}}{f{d}}}A`}{{{f{d}}{f{bAb}}}Ad}{cc{}}{{}c{}}{{{f{bl}}}j}5{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{fAh}","D":"Ab","p":[[0,"mut"],[5,"Parser",0],[1,"reference",null,null,1],[1,"u8"],[1,"unit"],[10,"Receiver",0],[1,"char"],[1,"bool"],[5,"Formatter",18],[8,"Result",18],[6,"Result",19,null,1],[5,"TypeId",20]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAkAAwAEAAMACQACABAAAgA=","P":[[2,"R"],[3,"T"],[5,""],[11,"T"],[12,"U"],[13,""],[15,"U,T"],[16,"U"],[17,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3091,2979,2971,2987,887]}